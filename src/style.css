body {
  font-family: 'Roboto', sans-serif; }

h1, h2, h3, h4, h5, h6 {
  margin: 0; }

html {
  margin-top: 0; }

.standard-margin {
  margin: 4em 2em; }

.fade-in {
  -webkit-transition: all .5s ease-in;
  transition: all .5s ease-in;
  opacity: 0; }

.appear {
  opacity: 1; }

#first {
  margin: 5% auto;
  width: 80%; }

#second .text-area {
  margin: 5% auto;
  width: 80%; }

#third .text-area {
  margin: 5% auto !important;
  width: 80% !important; }

.section-devider {
  width: 50%;
  height: 1px;
  margin: 1em auto;
  margin-bottom: 3em;
  border: none;
  border-bottom: 1px rgba(0, 0, 0, 0.2) solid;
  display: block; }

.clear-space {
  height: 4em;
  display: block; }

#after-sponsors {
  margin-top: 5em; }

.events-wrapper {
  height: 40vh; }
  .events-wrapper .events-inner h1 {
    font-family: 'Kanit', sans-serif;
    font-weight: 800;
    text-transform: uppercase;
    text-align: center;
    margin: 4em 0; }

/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

.desktop-header {
  display: none; }

.mobile-header .logo {
  width: 50%;
  margin: 1em auto;
  max-width: 18em; }
  .mobile-header .logo img {
    width: 100%;
    display: block; }

.mobile-header .open-btn {
  position: absolute;
  top: 0;
  right: 0;
  margin: 2em 1em; }
  .mobile-header .open-btn img {
    width: 25px; }

.sidenav {
  height: 100%;
  width: 0;
  position: fixed;
  z-index: 1;
  top: 0;
  left: 0;
  background-color: #001638;
  overflow-x: hidden;
  padding-top: 60px;
  -webkit-transition: 0.5s;
  transition: 0.5s; }
  .sidenav ul {
    margin: 0;
    list-style-type: none;
    padding: 0; }
  .sidenav a {
    padding: 8px 8px 8px 32px;
    text-decoration: none;
    font-size: 25px;
    color: #fff;
    display: block;
    -webkit-transition: 0.3s ease color;
    transition: 0.3s ease color; }
    .sidenav a:hover {
      color: #008CFF; }
  .sidenav .close-btn {
    position: absolute;
    top: 0;
    right: 0;
    margin: 1em; }
    .sidenav .close-btn img {
      width: 20px; }

@media only screen and (min-width: 60em) {
  .mobile-header {
    display: none; }
  .desktop-header {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    padding: 1em 3em; }
    .desktop-header .logo {
      -webkit-box-flex: 0;
      -ms-flex: 0 0 20%;
      flex: 0 0 20%;
      max-width: 10em; }
      .desktop-header .logo img {
        display: block;
        width: 100%; }
    .desktop-header nav {
      -webkit-box-flex: 0;
      -ms-flex: 0 0 35%;
      flex: 0 0 35%; }
      .desktop-header nav ul {
        list-style-type: none;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-pack: distribute;
        justify-content: space-around;
        margin: 0;
        padding: 0; }
        .desktop-header nav ul li {
          -webkit-box-flex: 0;
          -ms-flex: 0 0 20%;
          flex: 0 0 20%;
          text-align: center; }
          .desktop-header nav ul li a {
            font-size: 1.1em;
            text-decoration: none;
            text-transform: uppercase;
            color: #000;
            font-family: 'Roboto', sans-serif; }
          .desktop-header nav ul li .active {
            color: #2076BE;
            font-weight: 800; } }

.banner {
  background-image: url("../images/Black_Spoke_Mockup_v2.jpg");
  height: 15em;
  background-position: center;
  background-size: cover;
  position: relative; }
  .banner-inner {
    position: absolute;
    width: 30em;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%); }
    .banner-inner .callout {
      width: 70%;
      margin: 0 auto; }
      .banner-inner .callout h1 {
        font-family: 'Kanit', sans-serif;
        font-weight: 800;
        color: #fff;
        text-shadow: 0 2px 5px black;
        text-transform: uppercase;
        text-align: center;
        font-size: 2.2em; }
    .banner-inner .button {
      margin: 0 auto;
      width: 10em; }
      .banner-inner .button a {
        display: block;
        border-radius: 7px;
        width: 100%;
        padding: .7em;
        background-color: #001638;
        text-decoration: none;
        color: #fff;
        font-family: 'Roboto', sans-serif;
        text-align: center;
        -webkit-box-shadow: 0 2px 6px rgba(0, 0, 0, 0.8);
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.8); }

@media only screen and (min-width: 40em) {
  .banner {
    height: 20em; }
    .banner-inner .callout {
      width: 100%; }
      .banner-inner .callout h1 {
        font-size: 3em; }
    .banner-inner .button {
      width: 15em; } }

@media only screen and (min-width: 60em) {
  .banner {
    height: 30em; } }

.text-area {
  margin: 2em; }
  .text-area-inner {
    margin: 0 0 5em 0; }
    .text-area-inner .text-area-top {
      text-align: center;
      margin: 3em 0; }
    .text-area-inner .col-3 .about-item {
      text-align: center;
      margin: 2em 0; }
      .text-area-inner .col-3 .about-item h3 {
        font-size: 2em;
        width: 4.9em;
        margin: 0 auto; }

.mobile-first {
  margin: 5em 2em; }
  .mobile-first-inner .left h2 {
    text-align: center;
    margin: 0 0 2em 0; }
  .mobile-first-inner .left p {
    text-align: center; }
  .mobile-first-inner .left .mobile-first-infographic {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    margin: 2em 0; }
    .mobile-first-inner .left .mobile-first-infographic .icon {
      -webkit-box-flex: 0;
      -ms-flex: 0 0 10%;
      flex: 0 0 10%; }
      .mobile-first-inner .left .mobile-first-infographic .icon img {
        width: 100%;
        display: block; }
    .mobile-first-inner .left .mobile-first-infographic p {
      text-align: left;
      margin: 0 0 0 2em; }
  .mobile-first-inner .right {
    height: 25em;
    overflow: hidden; }
    .mobile-first-inner .right img {
      display: block;
      width: 100%;
      max-width: 20em;
      margin: 0 auto; }

@media only screen and (min-width: 40em) {
  .text-area {
    margin: 3em; }
  .mobile-first {
    margin: 5em 3em; } }

@media only screen and (min-width: 60em) {
  .text-area {
    margin: 5em auto;
    width: 80%;
    max-width: 80em; }
    .text-area-inner .text-area-top p {
      max-width: 40em;
      margin: 1.5em auto; }
    .text-area-inner .col-3 {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      margin: 4em 0; }
      .text-area-inner .col-3 .about-item {
        text-align: left;
        -webkit-box-flex: 1;
        -ms-flex: 1 0 25%;
        flex: 1 0 25%;
        margin: 1em; }
        .text-area-inner .col-3 .about-item h3 {
          margin: 0; }
  .mobile-first {
    margin: 5em auto;
    width: 80%;
    max-width: 80em; }
    .mobile-first-inner {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: justify;
      -ms-flex-pack: justify;
      justify-content: space-between; }
      .mobile-first-inner .left {
        -webkit-box-flex: 0;
        -ms-flex: 0 0 50%;
        flex: 0 0 50%; }
        .mobile-first-inner .left h2 {
          text-align: left; }
        .mobile-first-inner .left p {
          text-align: left;
          margin-bottom: 4em; }
        .mobile-first-inner .left .mobile-first-infographic {
          -webkit-box-align: center;
          -ms-flex-align: center;
          align-items: center; }
          .mobile-first-inner .left .mobile-first-infographic .icon {
            -webkit-box-flex: 0;
            -ms-flex: 0 0 8%;
            flex: 0 0 8%; }
          .mobile-first-inner .left .mobile-first-infographic p {
            -webkit-box-flex: 0;
            -ms-flex: 0 0 50%;
            flex: 0 0 50%; }
      .mobile-first-inner .right {
        -webkit-box-flex: 0;
        -ms-flex: 0 0 30%;
        flex: 0 0 30%; } }

.display-grid {
  margin: 2em; }
  .display-grid-inner h2 {
    text-align: center;
    margin: 2em 0; }
  .display-grid-inner .images-container .image-container {
    position: relative;
    margin: .5em; }
    .display-grid-inner .images-container .image-container img {
      width: 100%;
      display: block;
      -webkit-box-shadow: 0 -3px 15px rgba(0, 0, 0, 0.2);
      box-shadow: 0 -3px 15px rgba(0, 0, 0, 0.2); }
    .display-grid-inner .images-container .image-container .image-overlay {
      background-color: #001638;
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      height: 2.5em;
      -webkit-box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.3);
      box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.3); }
      .display-grid-inner .images-container .image-container .image-overlay .title {
        -webkit-box-flex: 0;
        -ms-flex: 0 0 60%;
        flex: 0 0 60%;
        color: #fff;
        line-height: 2.5em;
        font-family: 'Kanit', sans-serif;
        font-weight: 800;
        text-transform: uppercase;
        text-align: center;
        letter-spacing: 1.5px;
        text-shadow: 0 0 5px rgba(0, 0, 0, 0.2); }
      .display-grid-inner .images-container .image-container .image-overlay .link {
        -webkit-box-flex: 0;
        -ms-flex: 0 0 40%;
        flex: 0 0 40%; }
        .display-grid-inner .images-container .image-container .image-overlay .link a {
          color: #008CFF;
          display: block;
          width: 100%;
          line-height: 2.5em;
          background-color: rgba(255, 255, 255, 0.2);
          text-align: center;
          text-decoration: none; }
    .display-grid-inner .images-container .image-container .photography-overlay {
      background-color: #ffa600; }
      .display-grid-inner .images-container .image-container .photography-overlay .link a {
        color: #664200; }
    .display-grid-inner .images-container .image-container .video-overlay {
      height: 100%;
      width: 100%;
      position: absolute;
      top: 0;
      left: 0;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center;
      -ms-flex-line-pack: center;
      align-content: center;
      -ms-flex-wrap: wrap;
      flex-wrap: wrap;
      margin: 0 auto; }
      .display-grid-inner .images-container .image-container .video-overlay .title {
        color: #fff;
        line-height: 2.5em;
        font-family: 'Kanit', sans-serif;
        font-weight: 800;
        text-transform: uppercase;
        text-align: center;
        letter-spacing: 1.5px;
        text-shadow: 0 0 9px rgba(0, 0, 0, 0.9);
        font-size: 2em;
        -webkit-box-flex: 1;
        -ms-flex: 1 0 90%;
        flex: 1 0 90%;
        line-height: 1em;
        margin-bottom: .5em; }
        .display-grid-inner .images-container .image-container .video-overlay .title h4 {
          width: 80%;
          text-align: center;
          margin: 0 auto; }
      .display-grid-inner .images-container .image-container .video-overlay .link {
        -webkit-box-flex: 1;
        -ms-flex: 1 0 90%;
        flex: 1 0 90%;
        -ms-flex-item-align: center;
        align-self: center; }
        .display-grid-inner .images-container .image-container .video-overlay .link a img {
          width: 5em;
          margin: 0 auto; }
  .display-grid-inner .view-all-work-btn {
    -webkit-transition: .3s ease all;
    transition: .3s ease all;
    padding-bottom: 1em; }
    .display-grid-inner .view-all-work-btn .icon {
      float: right;
      fill: #001638; }
      .display-grid-inner .view-all-work-btn .icon svg {
        display: block;
        width: 1.25em;
        margin-left: .5em;
        -webkit-transition: .3s ease fill;
        transition: .3s ease fill; }
    .display-grid-inner .view-all-work-btn a {
      float: right;
      color: #001638;
      text-decoration: none;
      margin: 0;
      padding: 0;
      line-height: 1.25em;
      -webkit-transition: .3s ease color;
      transition: .3s ease color; }
    .display-grid-inner .view-all-work-btn:hover #svg-arrow {
      fill: #008CFF; }
    .display-grid-inner .view-all-work-btn:hover #view-all-port {
      color: #008CFF; }

@media only screen and (min-width: 40em) {
  .display-grid {
    margin: 3em; } }

@media only screen and (min-width: 60em) {
  .display-grid {
    margin: 5em auto;
    width: 80%;
    max-width: 80em; }
    .display-grid-inner .images-container {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-wrap: wrap;
      flex-wrap: wrap; }
      .display-grid-inner .images-container .image-container {
        -webkit-box-flex: 1;
        -ms-flex: 1 0 30%;
        flex: 1 0 30%;
        -webkit-box-shadow: none;
        box-shadow: none;
        padding: .5em; }
        .display-grid-inner .images-container .image-container img {
          width: 100%;
          display: block;
          margin: 0; }
        .display-grid-inner .images-container .image-container .image-overlay {
          top: 0;
          height: 100%;
          width: 100%;
          background-color: rgba(0, 22, 56, 0.8);
          display: -webkit-box;
          display: -ms-flexbox;
          display: flex;
          -ms-flex-wrap: wrap;
          flex-wrap: wrap;
          -ms-flex-line-pack: center;
          align-content: center;
          opacity: 0;
          -webkit-transition: .5s ease all;
          transition: .5s ease all; }
          .display-grid-inner .images-container .image-container .image-overlay .title {
            -webkit-box-flex: 1;
            -ms-flex: 1 0 90%;
            flex: 1 0 90%;
            text-shadow: 0 0 5px rgba(0, 0, 0, 0.8);
            font-size: 2em;
            line-height: 1.1em;
            margin-bottom: .5em; }
          .display-grid-inner .images-container .image-container .image-overlay .link {
            -webkit-box-flex: 1;
            -ms-flex: 1 0 90%;
            flex: 1 0 90%; }
            .display-grid-inner .images-container .image-container .image-overlay .link a {
              background-color: #008CFF;
              width: 50%;
              margin: 0 auto;
              border-radius: 5px;
              -webkit-box-shadow: 3px 2px 5px rgba(0, 0, 0, 0.8);
              box-shadow: 3px 2px 5px rgba(0, 0, 0, 0.8);
              color: #fff;
              -webkit-transition: .3s ease all;
              transition: .3s ease all; }
              .display-grid-inner .images-container .image-container .image-overlay .link a:hover {
                background-color: #00245c;
                -webkit-box-shadow: 3px 2px 5px rgba(255, 255, 255, 0.3);
                box-shadow: 3px 2px 5px rgba(255, 255, 255, 0.3); }
        .display-grid-inner .images-container .image-container .video-overlay {
          opacity: 0;
          -webkit-transition: .5s ease all;
          transition: .5s ease all;
          background-color: rgba(0, 22, 56, 0.8); }
          .display-grid-inner .images-container .image-container .video-overlay:hover {
            opacity: 1; }
        .display-grid-inner .images-container .image-container:hover .image-overlay {
          opacity: 1; }
    .display-grid-inner .view-all-work-btn {
      margin-top: 1.5em; } }

h2 {
  font-family: 'Kanit', sans-serif;
  font-weight: 800;
  text-transform: uppercase;
  font-size: 2em; }

h3 {
  font-family: 'Kanit', sans-serif;
  font-weight: 800;
  text-transform: uppercase;
  color: #2076BE; }

.horizontal-line {
  content: "";
  display: block;
  height: 1px;
  width: 80%;
  margin: 1.5em auto;
  background-image: -webkit-gradient(linear, left top, right top, from(rgba(255, 255, 255, 0)), color-stop(rgba(0, 0, 0, 0.5)), to(rgba(255, 255, 255, 0)));
  background-image: linear-gradient(90deg, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.5), rgba(255, 255, 255, 0));
  max-width: 25em; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
